木の走査
・葉からがダメなら根から更新はどうか。

文字列操作
・いい考察ができないならmapで愚直シミュとかできないか。

ゲーム
・いい考察ができないならゲームDPとかで愚直シミュして規則性を探せないか。

グリッド
・行列独立に考えられないか。複雑に動くように見えて、よくよく試してみたら独立じゃないか。

N<=18
・bitDPが無理そうなら視点を変えたらビット全探索できないか。その逆も。
　順列っぽい見た目をしててもbitDPじゃなくてビット全探索かもよ。

XORの性質
・打ち消し合うので、最大ビットだけ見れば大小関係を変えられる。

地獄場合分け
・if文8通りも書くくらいだったら、ビットで何とかなったりしない？

N<=100
・N^3でDPとかやりそうだけど、それだとちょっと余裕ある。
　外側でもう1周回して何かを決め打ちのN^4、とかもあるかも。

N<=500
・N^3のDPはどう？想定解が億超え、普通にあるよ、特にこどふぉなら。
　C++なら速度は大丈夫、1秒以内もいける。MLE注意。節約テクやらないと、intでやっても512Mギリギリっぽい。

N<=1000
・2乗のDPはもちろんある。けど他には？
　Nを全箇所試して、内側でNかけてシミュ、もある。

N<=5000
・明らかに2重ループで何かしたい。DP？何か1つを決めて全探索？
　変数2つの式にして値を全探索、ってのもあった。

N<=10万台
・複雑な順位付けはできないのが分かる。いい方針が思いつかないなら、
　とりあえず大きい方から貪欲か小さい方から貪欲はやってみていいんじゃないかな。
・そのアドホック、ほんとにアドホック？　状態2,3個もったらDPに、とかならない？
・愚直2重ループは無理。でも、探す必要のある状態は減らせない？
　内側をlogにするのはよくあるけど、整数問題なら約数列挙や素因数分解で√もあるし、
　内側じゃなくて外側を減らせることもあるよ。
　内側ループ高速化でどん詰まったら、見方を変えるも考えよう。
　答えの方を全探索とか。

貪欲
・最大を貪欲してうまくいかなかった？最小もやってみて、その間ならOKとかあるかもよ。

場合分けが合わない
・Nが10万なら全箇所試す全探索できない？実装だるめでも、例外ケースで煮詰まってるよりはやる方がいい。

大きい方から貪欲に使う時は
・下から見ると無駄も多いしはみ出して1個戻るみたいになって下手。
　ダブリングのビット見る時みたいに上からfor文回したらきれいに書けそうだよ。

数え上げ
・3つあると真ん中固定したくなるけど、先頭固定で後ろだけ見るってのもいいみたいだよ。

何かを決め打ち
・本当にそれ全部使う？もうちょい見る所減らせるんじゃない？

シグマの式変形
・つらいけど頑張ろう。その添字が絡んでない部分を外側に出したり(シグマを内側に入れたり)できないか？
　あと、シグマの連結は(両方の添字が入ってれば多分)掛け算っぽくくくったりできるぞ。(参考：https://codeforces.com/blog/entry/86126 のE)
　独立に計算できる部分を見つけていけば、ループを減らす方法が見えてくるかもしれん。

集合
・その集合、本当に全部持つ必要ある？連続した区間ならmin,maxだけ持てばいいよ。

整数問題
・倍数は約数も考える。その逆も。

幾何
・難しく考え過ぎてないか？三角関数もちろんありそうだが、
　直角があるなら三平方の定理で済んだりするかもよ。

まつかわさんのツイートから
逆から見る
個別に考える
実験する
十分条件を考える
判定問題を考える
式をいじる
持つ状態を減らす
上程の上限を見積もる
