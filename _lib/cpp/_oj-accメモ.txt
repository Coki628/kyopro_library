参考：https://oucrc.net/articles/e6vkrz4uqtt/
　　　https://hamukichi.hatenablog.jp/entry/2020/06/02/225148#%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E3%81%A8%E5%85%A5%E5%87%BA%E5%8A%9B%E4%BE%8B%E3%81%AB%E3%82%88%E3%82%8B%E3%83%86%E3%82%B9%E3%83%88
　　　http://tatamo.81.la/blog/2018/12/07/atcoder-cli-installation-guide/
　　　https://github.com/online-judge-tools/oj/blob/master/README.ja.md
導入
pip install online-judge-tools
npm install -g atcoder-cli

・コンテストフォルダ作成
acc new abc088
・問題フォルダでmain.cppを書き足して問題を解く。
・ビルドしてa.exeを同じ階層に生成
・問題フォルダでoj testを実行
・問題フォルダで提出を実行
acc submit

参考：https://hamukichi.hatenablog.jp/entry/2020/09/17/230818#fn-dafbc722
・ランダムテスト実行
pip install online-judge-template-generator
oj-prepare https://atcoder.jp/contests/abc177
cd abc177_a
(解答コードを書く)
ビルドしてoj test
ここまででサンプル確認
以下、ランダムテスト
generate.pyを編集
・制約小さくしたり数字いじる。
oj generate-input "python generate.py"
・条件に合うケースがデフォルトで100個生成される。
↓これなら1個生成
oj generate-input "python generate.py" 1
(愚直解を書く)
生成したランダムケースの正解を生成
oj generate-output
(デフォルトはa.exeが使われる)
これでもっかいoj testやればこれらも含めて全チェックしてくれる。

備考
問題個別もできる。これだとフォルダは生成されないので、適切な階層を作ってからそこで実行
→_ojって場所を作ったので、ここをテスト用の領域にしたらよさそう。
oj-prepare https://atcoder.jp/contests/joig2021-open/tasks/joig2021_b
愚直解Python指定
oj generate-output -c "python naive.py"

include読み込み
pip install online-judge-verify-helper
oj-bundle 読み込みたいファイルパス > 出力ファイルパス
ってやる。
何もない所に出力したら文字コードがバグったので、Winだったら予めUTF-8で空ファイルは作っておいた方がよさそう。
そうやったらうまくいった。
→PSがダメなだけでcmdでやる分には大丈夫っぽい。
ACLの展開
・適切にパス設定をやった状態で、<>ではなく""の方でACLをインクルードすれば展開される。

とりあえず
ac.bat コンテスト名
で準備ができるようにしてある。
デバッグしたければ普通にF5
oj testしたい時はctrl+shift+B
で今開いてる問題を実行できるようにしてある。
この時どちらでも_dist/main.cppに提出用のを書き込むようにしてある。

atcoder-cliの設定
参考：http://tatamo.81.la/blog/2018/12/07/atcoder-cli-tutorial/

oj-prepare
デフォルトでは設定ファイルが(Windowsの場合)見つかりにくい場所にある。
C:\Users\srcn4\AppData\Local\online-judge-tools\online-judge-tools
ここでは個別の設定ができないが、オプション引数で別の設定ファイルを指定できるので、
oj-prepare --config-file C:\Users\srcn4\AppData\Local\online-judge-tools\online-judge-tools\prepare.config.cf.toml https://codeforces.com/contest/1619
みたいにすることで、こどふぉ用テンプレを読み込めた。
設定ファイル内で階層も指定すれば、atcoder-cliと同じフォルダ構成にもできた。

oj-template
ランダムテスト用にgenerate.pyも欲しい所だが、毎回全ての問題に要る訳じゃない。
必要な時だけ使いたい。
oj-prepareの設定ファイルに組み込むと、常に生成されてしまう。
そこで、
oj-template -t generate.py https://atcoder.jp/contests/abc232/tasks/abc232_a > generate.py
のようにすることで、個別生成ができた。

☆ランダムテスト作成手順個別☆
cd 問題の階層
oj-template -t generate.py 問題URL > generate.py
generate.pyを編集
oj generate-input "python generate.py" 作成ケース数
→この時既に作成済のランダムケースがあったら、そこに追加で指定ケース分増やされる。
愚直解を書いて実行。これでa.exeが愚直解のものになる。
oj generate-output
ここまでやるとランダムケースと答えが生成されているので、
後はoj testを実行すればいい。
落ちたケースだけ残して次回以降も動くようにするといいかも。
マルチテストケースのやつでも、デバッグ的に1ファイル1ケースでたくさん作った方が見やすそう。
